% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGeneric.R, R/graph.R
\docType{methods}
\name{extractClass}
\alias{extractClass}
\alias{extractClass,list,character-method}
\alias{extractClass,list-character-method}
\title{Extract class}
\usage{
extractClass(L, Cl)

\S4method{extractClass}{list,character}(L, Cl)
}
\arguments{
\item{L}{an object of class \code{block_list}.}

\item{Cl}{A string identifying which object to extract; can either be \code{process} or \code{Obs}.}
}
\value{
Object of class \code{Obs} or class \code{process}.
}
\description{
This function is used to extract either the observations or the processes from a list of vertices (i.e. a \code{block_list})
}
\examples{
\dontrun{
require(Matrix)
data(icesat)
data(surf_fe)

## First create observation object
icesat_obs <- Obs(df=icesat,
                 abs_lim = 5,
                 avr_method = "median",
                 box_size=100,
                 name="icesat")

## Now create GMRF defined over some FE basis
Mesh <- initFEbasis(p=surf_fe$p,
                    t=surf_fe$t,
                    M=surf_fe$M,
                    K=surf_fe$K)

mu <- matrix(0,nrow(Mesh),1)
Q <- sparseMatrix(i=1:nrow(surf_fe$p), j = 1:nrow(surf_fe$p), x = 1)

my_GMRF <- GMRF(mu = mu, Q = Q,name="SURF",t_axis = 0:6)
SURF <-GMRF_basis(G = my_GMRF, Basis = Mesh)

L1 <- link(SURF,icesat_obs)
e <- link_list(list(L1))
v <- block_list(list(O = icesat_obs, G = SURF))
G <- new("Graph",e=e,v=v)
G_reduced <- compress(G)

retrieved_proc_from_list <- extractClass(v,"process")
}
}
\keyword{extraction}
\keyword{list}
