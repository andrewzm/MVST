% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geometryfns.R
\name{colour_graph}
\alias{colour_graph}
\title{Greedy graph colouring algorithm}
\usage{
colour_graph(adj.matrix, numcolours, method = "BFS", startnode = 1,
  obs = NULL)
}
\arguments{
\item{adj.matrix}{the graphs adjacency matrix (usually sparse)}

\item{numcolours}{the maximum number of colours to try out with the \code{BFS} and \code{DSATUR} methods. The function gives an error if this is exceeded.}

\item{method}{takes values \code{"BFS"}, \code{"DSATUR"} or \code{"backtrack"} for the breadth-first-search, the maximum-degree-of-saturation and the backtracking respectively. 
In the latter method, a four-colour configuration is attempted using brute force, where the order is obtained by first running a \code{DSATUR} run.}

\item{startnode}{the starting node for the BFS algorithm}

\item{obs}{an \code{m x n} matrix identifiying which partitions each observations affect. If present, the algorithm
will not produce a colouring where an observation influences two or more partitions of the same colour
(as such this increases the chromatic number of the problem). This option is only available with \code{BFS} and 
\code{DSATUR}}
}
\value{
a data frame with the associated colour for each vertex (also \code{class})
}
\description{
This algorithm colours the nodes in sequential order, where the order is given through a breadth first search algorithm started on a
pre-specified start-node.
}
\references{
\url{http://community.topcoder.com/longcontest/?module=Static&d1=match_editorials&d2=intel_mtcs_10}
}
\author{
Andrew Zammit Mangion
}
